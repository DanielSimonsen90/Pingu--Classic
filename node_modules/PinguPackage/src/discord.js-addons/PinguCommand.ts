import { Message, VoiceConnection } from 'discord.js';

import PinguHandler from './PinguHandler'

import { PClient } from '../database';
import { DiscordPermissions } from '../helpers'

import { PinguLibrary } from '../pingu/library/PinguLibrary';
import { PinguUser } from '../pingu/user/PinguUser';
import { PinguGuild } from '../pingu/guild/PinguGuild';

export enum CommandIDs {
    Utility = 1,
    Fun = 2,
    Support = 3,
    DevOnly = 4,
    GuildSpecific = 5
}

export interface PinguCommandParams {
    message: Message,
    args?: string[],
    pAuthor?: PinguUser,
    pGuild?: PinguGuild,
    pGuildClient?: PClient
}

export default class PinguCommand extends PinguHandler {
    constructor(data: {
        name: string,
        path?: "",
        description: string, 
        usage: "", 
        guildOnly?: false,
        id: CommandIDs, 
        specificGuildID?: undefined,
        examples: [""],
        permissions: string[],
        aliases: [""],
        execute: (params: PinguCommandParams) => Promise<void | Message | VoiceConnection>
    }) { 
        super(data.name);

        //Must need these
        const { description, id, permissions, execute } = data;
        this.description = description;
        this.id = id;
        this.permissions = [...permissions + DiscordPermissions.SEND_MESSAGES];
        this.execute = execute;

        //Optional
        const { path, usage, guildOnly, specificGuildID, examples, aliases } = data;
        this.path = path;
        this.usage = usage;
        this.guildOnly = guildOnly;
        this.specificGuildID = specificGuildID;
        this.examples = examples;
        this.aliases = aliases;
        }
    
    public name: string;
    public path: string;
    public description: string;
    public usage: string;
    public guildOnly = false;
    public id: CommandIDs;
    public specificGuildID: string;
    public examples: string[];
    public permissions: string[];
    public aliases: string[];
    
    public async execute(params: PinguCommandParams): Promise<void | Message | VoiceConnection> {
        return PinguLibrary.errorLog(
            params.message.client, 
            `Execute for command **${this.name}**, was not defined!`
        );
    }
}