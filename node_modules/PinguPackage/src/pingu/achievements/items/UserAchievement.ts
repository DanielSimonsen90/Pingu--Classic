import { AchievementBase, AchievementBaseType, noGuildOnlyCommands } from "./AchievementBase";
import { GetPUsers } from "../../user/PinguUser";
import { Percentage } from "../../../helpers";

export interface UserAchievementType extends AchievementBaseType {
    COMMAND: noGuildOnlyCommands
}
export type UserAchievementTypeKey = keyof UserAchievementType;

export class UserAchievement<Key extends UserAchievementTypeKey> extends AchievementBase {
    constructor(id: number, name: string, key: Key, type: UserAchievementType[Key], description: string) {
        super(id, name, description);
        this.key = key;
        this.type = type;
    }

    public key: Key;
    public type: UserAchievementType[Key];

    public async getPercentage() {
        let pUsers = await GetPUsers();
        let whole = pUsers.length;
        let part = pUsers.filter(pUser => pUser.achievementConfig.achievements.find(a => a._id == this._id)).length;
        return new Percentage(whole, part);
    }

    public static Achievements: UserAchievement<UserAchievementTypeKey>[] = [
        
    ];
}