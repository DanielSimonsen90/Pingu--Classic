import { Client, Guild, GuildMember } from 'discord.js';

import { PItem, PClient, PGuildMember, PChannel } from "../../database/json";
import { PinguLibrary } from '../library/PinguLibrary';
import { GiveawayConfig, PollConfig, SuggestionConfig, ThemeConfig } from '../../decidable/config'

import { WritePGuild, GetPGuild, GetPGuilds, UpdatePGuild, DeletePGuild } from './CRUD';
import { GetPClient } from './statics';
import { ReactionRole } from './items';

class PinguGuild extends PItem {
    public static async WritePGuild(client: Client, guild: Guild, scriptName: string, succMsg: string, errMsg: string) {
        return WritePGuild(client, guild, scriptName, succMsg, errMsg);
    }
    public static async GetPGuild(guild: Guild): Promise<PinguGuild> {
        return GetPGuild(guild);
    }
    public static async UpdatePGuild(client: Client, updatedProperty: object, pGuild: PinguGuild, scriptName: string, succMsg: string, errMsg: string) {
        return UpdatePGuild(client, updatedProperty, pGuild, scriptName, succMsg, errMsg);
    }
    public static async DeletePGuild(client: Client, guild: Guild, scriptName: string, succMsg: string, errMsg: string): Promise<PinguGuild> {
        return DeletePGuild(client, guild, scriptName, succMsg, errMsg);
    }
    public static async GetPGuilds(): Promise<PinguGuild[]> {
        return GetPGuilds();
    }

    public static GetPClient(client: Client, pGuild: PinguGuild) {
        return GetPClient(client, pGuild);
    }

    constructor(guild: Guild, owner?: GuildMember) {
        super(guild);

        if (guild.owner) this.guildOwner = new PGuildMember(guild.owner);
        else if (owner) this.guildOwner = new PGuildMember(owner);
        else PinguLibrary.errorLog(guild.client, `Owner wasn't set when making Pingu Guild for "${guild.name}".`);

        this.clients = new Array<PClient>();
        let clientIndex = guild.client.user.id == PinguLibrary.Clients.PinguID ? 0 : 1;
        if (clientIndex != 0) this.clients.push(null);
        this.clients[clientIndex] = new PClient(guild.client, guild);

        let welcomeChannel = guild.channels.cache.find(c => c.isText() && c.name.includes('welcome')) ||
            guild.channels.cache.find(c => c.isText() && c.name == 'general');

        if (welcomeChannel) this.welcomeChannel = new PChannel(welcomeChannel);

        this.reactionRoles = new Array<ReactionRole>();
        this.giveawayConfig = new GiveawayConfig();
        this.pollConfig = new PollConfig();
        this.suggestionConfig = new SuggestionConfig();
        this.themeConfig = guild.id == PinguLibrary.SavedServers.DeadlyNinja(guild.client).id ? new ThemeConfig() : undefined;
    }
    public guildOwner: PGuildMember
    public clients: PClient[]
    public welcomeChannel: PChannel
    public reactionRoles: ReactionRole[];
    public giveawayConfig: GiveawayConfig
    public pollConfig: PollConfig
    public suggestionConfig: SuggestionConfig
    public themeConfig: ThemeConfig
}
export { PinguGuild }