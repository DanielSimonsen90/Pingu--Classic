import { Client, User } from "discord.js";
import { PUser, PQueue, PGuild } from "../../database";
import { Marry, Daily, Achievement } from "./items";

import { WritePUser, GetPUser, GetPUsers, UpdatePUser, DeletePUser } from './CRUD';

class PinguUser {
    public static async WritePUser(client: Client, user: User, scriptName: string, succMsg: string, errMsg: string) {
        return WritePUser(client, user, scriptName, succMsg, errMsg)
    }
    public static async GetPUser(user: User): Promise<PinguUser> {
        return GetPUser(user);
    }
    public static async UpdatePUser(client: Client, updatedProperty: object, pUser: PinguUser, scriptName: string, succMsg: string, errMsg: string): Promise<PinguUser> {
        return UpdatePUser(client, updatedProperty, pUser, scriptName, succMsg, errMsg);
    }
    public static async DeletePUser(client: Client, user: User, scriptName: string, succMsg: string, errMsg: string): Promise<PinguUser> {
        return DeletePUser(client, user, scriptName, succMsg, errMsg);
    }
    public static async GetPUsers(): Promise<PinguUser[]> {
        return GetPUsers();
    }

    constructor(user: User) {
        let pUser = new PUser(user);
        this._id = pUser._id;
        this.tag = pUser.name;
        this.sharedServers = user.client.guilds.cache.filter(g => g.members.cache.has(user.id)).map(g => new PGuild(g));
        this.marry = new Marry();
        this.replyPerson = null;
        this.daily = new Daily();
        this.avatar = user.avatarURL();
        this.playlists = new Array<PQueue>();
    }
    public _id: string
    public tag: string
    public sharedServers: PGuild[]
    public marry: Marry
    public replyPerson: PUser
    public daily: Daily
    public avatar: string
    public playlists: PQueue[]
    //public Achievements: Achievement[]
}
export {PinguUser}