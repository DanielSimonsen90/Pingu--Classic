import { Message, VoiceConnection } from 'discord.js';
import PinguHandler from './PinguHandler';
import { PClient } from '../database';
import { PinguUser } from '../pingu/user/PinguUser';
import { PinguGuild } from '../pingu/guild/PinguGuild';
export declare enum CommandIDs {
    Utility = 1,
    Fun = 2,
    Support = 3,
    DevOnly = 4,
    GuildSpecific = 5
}
export interface PinguCommandParams {
    message: Message;
    args?: string[];
    pAuthor?: PinguUser;
    pGuild?: PinguGuild;
    pGuildClient?: PClient;
}
export default class PinguCommand extends PinguHandler {
    constructor(data: {
        name: string;
        path?: "";
        description: string;
        usage: "";
        guildOnly?: false;
        id: CommandIDs;
        specificGuildID?: undefined;
        examples: [""];
        permissions: string[];
        aliases: [""];
        execute: (params: PinguCommandParams) => Promise<void | Message | VoiceConnection>;
    });
    name: string;
    path: string;
    description: string;
    usage: string;
    guildOnly: boolean;
    id: CommandIDs;
    specificGuildID: string;
    examples: string[];
    permissions: string[];
    aliases: string[];
    execute(params: PinguCommandParams): Promise<void | Message | VoiceConnection>;
}
