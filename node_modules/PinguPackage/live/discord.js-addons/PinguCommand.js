"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommandIDs = void 0;
const PinguHandler_1 = require("./PinguHandler");
const helpers_1 = require("../helpers");
const PinguLibrary_1 = require("../pingu/library/PinguLibrary");
var CommandIDs;
(function (CommandIDs) {
    CommandIDs[CommandIDs["Utility"] = 1] = "Utility";
    CommandIDs[CommandIDs["Fun"] = 2] = "Fun";
    CommandIDs[CommandIDs["Support"] = 3] = "Support";
    CommandIDs[CommandIDs["DevOnly"] = 4] = "DevOnly";
    CommandIDs[CommandIDs["GuildSpecific"] = 5] = "GuildSpecific";
})(CommandIDs = exports.CommandIDs || (exports.CommandIDs = {}));
class PinguCommand extends PinguHandler_1.default {
    constructor(data) {
        super(data.name);
        this.guildOnly = false;
        //Must need these
        const { description, id, permissions, execute } = data;
        this.description = description;
        this.id = id;
        this.permissions = [...permissions + helpers_1.DiscordPermissions.SEND_MESSAGES];
        this.execute = execute;
        //Optional
        const { path, usage, guildOnly, specificGuildID, examples, aliases } = data;
        this.path = path;
        this.usage = usage;
        this.guildOnly = guildOnly;
        this.specificGuildID = specificGuildID;
        this.examples = examples;
        this.aliases = aliases;
    }
    execute(params) {
        return __awaiter(this, void 0, void 0, function* () {
            return PinguLibrary_1.PinguLibrary.errorLog(params.message.client, `Execute for command **${this.name}**, was not defined!`);
        });
    }
}
exports.default = PinguCommand;
