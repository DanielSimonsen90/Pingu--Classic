"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PinguGuildSchema = void 0;
const mongoose = require("mongoose");
const PItem = {
    _id: String,
    name: String
};
const DecidableConfig = {
    firstTimeExecuted: Boolean,
    channel: PItem
};
const DecidableItem = {
    value: String,
    _id: String,
    author: PItem,
    channel: PItem,
    endsAt: Date
};
const PinguGuildSchema = mongoose.model('PinguGuild', new mongoose.Schema({
    _id: String,
    name: String,
    guildOwner: PItem,
    clients: [{
            _id: String,
            embedColor: Number,
            prefix: String,
            displayName: String
        }],
    welcomeChannel: PItem,
    reactionRoles: [{
            channel: PItem,
            messageID: String,
            emoteName: String,
            pRole: PItem
        }],
    giveawayConfig: Object.assign(Object.assign({}, DecidableConfig), { allowSameWinner: Boolean, hostRole: PItem, winnerRole: PItem, giveaways: [Object.assign(Object.assign({}, DecidableItem), { winners: [PItem] })] }),
    pollConfig: Object.assign(Object.assign({}, DecidableConfig), { pollsRole: PItem, polls: [Object.assign(Object.assign({}, DecidableItem), { YesVotes: Number, NoVotes: Number, approved: String })] }),
    suggestionConfig: Object.assign(Object.assign({}, DecidableConfig), { verifyRole: PItem, suggestions: [Object.assign(Object.assign({}, DecidableItem), { approved: String, decidedBy: PItem })] }),
    themeConfig: Object.assign(Object.assign({}, DecidableConfig), { allowSameWinner: Boolean, ignoreLastWins: Number, hostRole: PItem, winnerRole: PItem, themes: [Object.assign(Object.assign({}, DecidableItem), { winners: [PItem] })] })
}));
exports.PinguGuildSchema = PinguGuildSchema;
