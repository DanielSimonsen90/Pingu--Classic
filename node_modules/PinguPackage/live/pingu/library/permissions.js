"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permissions = exports.PermissionGranted = exports.PermissionCheck = void 0;
const PinguLibrary_1 = require("./PinguLibrary");
const config = require("../../config.json");
const { testingMode } = config;
const helpers_1 = require("../../helpers");
function PermissionCheck(check, permissions) {
    if (permissions[0].length == 1) {
        PinguLibrary_1.PinguLibrary.errorLog(check.client, `Permissions not defined correctly!`, check.content);
        return "Permissions for this script was not defined correctly!";
    }
    for (var x = 0; x < permissions.length; x++) {
        var permString = permissions[x].toLowerCase().replace('_', ' ');
        if (!checkPermisson(check.channel, check.client.user, permissions[x]))
            return `I don't have permission to **${permString}** in ${check.channel.name}.`;
        else if (!checkPermisson(check.channel, check.author, permissions[x]) &&
            (PinguLibrary_1.PinguLibrary.isPinguDev(check.author) && testingMode || !PinguLibrary_1.PinguLibrary.isPinguDev(check.author)))
            return `<@${check.author.id}> you don't have permission to **${permString}** in #${check.channel.name}.`;
    }
    return PinguLibrary_1.PinguLibrary.PermissionGranted;
    function checkPermisson(channel, user, permission) {
        return channel.permissionsFor(user).has(permission);
    }
}
exports.PermissionCheck = PermissionCheck;
exports.PermissionGranted = "Permission Granted";
function Permissions() {
    //let all = Array.from(getPermissions()).reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});
    let givenStrings = [
        helpers_1.DiscordPermissions.MANAGE_ROLES,
        helpers_1.DiscordPermissions.MANAGE_CHANNELS,
        helpers_1.DiscordPermissions.CHANGE_NICKNAME,
        helpers_1.DiscordPermissions.VIEW_CHANNEL,
        helpers_1.DiscordPermissions.SEND_MESSAGES,
        helpers_1.DiscordPermissions.SEND_TTS_MESSAGES,
        helpers_1.DiscordPermissions.MANAGE_MESSAGES,
        helpers_1.DiscordPermissions.EMBED_LINKS,
        helpers_1.DiscordPermissions.ATTACH_FILES,
        helpers_1.DiscordPermissions.MANAGE_EMOJIS,
        helpers_1.DiscordPermissions.READ_MESSAGE_HISTORY,
        helpers_1.DiscordPermissions.USE_EXTERNAL_EMOJIS,
        helpers_1.DiscordPermissions.ADD_REACTIONS,
        helpers_1.DiscordPermissions.CONNECT,
        helpers_1.DiscordPermissions.SPEAK,
        helpers_1.DiscordPermissions.USE_VAD,
        helpers_1.DiscordPermissions.VIEW_AUDIT_LOG
    ];
    let given = [], missing = [], all = [];
    for (var perm of Array.from(getPermissions())) {
        let permObj = new helpers_1.BitPermission(perm[0], perm[1]);
        if (givenStrings.includes(perm[0]))
            given.push(permObj);
        else
            missing.push(permObj);
        all.push(permObj);
    }
    return { given, missing, all };
    function getPermissions() {
        let temp = new Map();
        let bits = getBitValues();
        for (var prop in helpers_1.DiscordPermissions) {
            if (prop == 'bitOf')
                continue;
            temp.set(prop, bits.find(bits => bits.permString == prop).bit);
        }
        return temp;
    }
    function getBitValues() {
        let permissions = Object.keys(helpers_1.DiscordPermissions)
            .map(permString => new helpers_1.BitPermission(permString, 0))
            .filter(perm => perm.permString != 'bitOf');
        for (var i = 0; i < permissions.length; i++)
            permissions[i].bit = i == 0 ? 1 : permissions[i - 1].bit * 2;
        return permissions;
    }
}
exports.Permissions = Permissions;
