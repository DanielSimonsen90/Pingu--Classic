import { AchievementBase, AchievementBaseType } from "./AchievementBase";
import { Percentage } from "../../../helpers";
declare type noGuildOnly = 'help' | 'info' | 'ping' | 'sort' | 'spinthewheel' | //Utility
'fact' | 'gif' | 'meme' | 'noot' | 'daily' | 'tell' | //Fun
'contact' | 'invite';
export interface UserAchievementType extends AchievementBaseType {
    COMMAND: noGuildOnly;
}
export declare type UserAchievementTypeKey = keyof UserAchievementType;
export declare class UserAchievement<Key extends UserAchievementTypeKey> extends AchievementBase {
    constructor(id: number, name: string, key: Key, type: UserAchievementType[Key], description: string);
    key: Key;
    type: UserAchievementType[Key];
    getPercentage(): Promise<Percentage>;
    static Achievements: UserAchievement<UserAchievementTypeKey>[];
}
export {};
