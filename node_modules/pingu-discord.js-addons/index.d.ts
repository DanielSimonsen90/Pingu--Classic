import { PinguUser, PinguGuild, PClient, CommandIDs } from 'PinguPackage'
import {
    Client, Collection, Guild, GuildEmoji, GuildMember,
    Invite, Message, MessageEmbed, MessageReaction,
    PermissionString, Presence, Role, User, VoiceConnection, VoiceState
} from 'discord.js';


declare module 'pingu-discord.js-addons' {
    export class PinguCommand {
        public name: string
        public path: string
        public description: string
        public usage: string
        public guildOnly: boolean
        public id: CommandIDs
        public examples: string[]
        public permissions: PermissionString[]
        public aliases: string[]
        public execute(params: {
            message: Message,
            args: string[],
            pAuthor: PinguUser,
            pGuild: PinguGuild,
            pGuildClient: PClient
        }): Promise<void | Message | VoiceConnection>
    }

    export interface PinguEventData {
        client?: Client,
        messages?: Collection<string, Message>,
        reaction?: MessageReaction,
        invite?: Invite,

        guild?: Guild,
        preGuild?: Guild,

        message?: Message,
        preMessage?: Message,

        member?: GuildMember,
        preMember?: GuildMember,

        user?: User,
        preUser?: User,

        emote?: GuildEmoji,
        preEmote?: GuildEmoji,

        presence?: Presence,
        prePresence?: Presence,

        role?: Role,
        preRole?: Role,

        state?: VoiceState
        preState?: VoiceState
    }
    export class PinguEvent {
        public name: string
        public path: string
        public setContent(data: PinguEventData): Promise<MessageEmbed> | MessageEmbed
        public content: MessageEmbed
        public execute(client: Client, data: PinguEventData): Promise<void | Message> | void
    }
}